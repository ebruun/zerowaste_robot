from compas.geometry import Frame
from compas.geometry import Point
from compas.geometry import Vector
from compas.geometry import Transformation

import cv2 as cv
import numpy as np

f1 = Frame(
    Point(1231.0929857258,2419.28094095468,1301.099233685),
    Vector(0.0790099124356339,0.996507820346806,0.0270110667055376),
    Vector(0.679305952325499,-0.0339896636151278,-0.733067613459003),
    )

a1 = [3900]


points = [
[1523.041176,3872.730586,960.765541],
[1634.062365,3532.915899,963.319834],
[1680.534773,3873.95512,1119.625644],
[1761.196388,3627.065299,1121.481447],
[1879.411888,3874.901697,1222.042743],
[1921.818209,3745.104037,1223.018396],
[1923.622022,3323.261339,965.853659],
[1971.573793,3474.742344,1123.322378],
[2032.420156,3665.02312,1223.986231],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2100.205043,3875.47766,1257.991538],
[2168.971545,3665.247137,1224.576567],
[2231.30997,3475.168448,1124.445264],
[2279.314387,3745.690518,1224.563917],
[2281.1182,3323.847821,967.399179],
[2321.301466,3875.626628,1223.953111],
[2321.301466,3875.626628,1223.953111],
[2441.194528,3628.180853,1124.421202],
[2521.058698,3875.334021,1123.259381],
[2521.058698,3875.334021,1123.259381],
[2569.99951,3534.451328,967.36606],
[2679.923111,3874.628481,965.76695],
[2679.923111,3874.628481,965.76695],
]

x_vectors = [
[-0.001833,-0.999997,0.00132],
[0.352332,-0.881059,-0.315591],
[-0.002348,-0.999992,0.003203],
[0.173751,-0.939944,-0.293796],
[-0.949707,0,-0.313139],
[0.045445,-0.984347,-0.17028],
[0.967909,-0.19894,0.153545],
[0,-0.825759,-0.564023],
[0,-0.957127,-0.289668],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[-0.999991,-0.000026,-0.004333],
[0.995773,0.026557,-0.087921],
[0.983844,0.10077,-0.147977],
[0.043863,0.984494,0.169847],
[0.968583,0.196526,-0.152399],
[-0.001924,0.99998,-0.006009],
[-0.001924,0.99998,-0.006009],
[0.170723,0.940509,0.293763],
[-0.003447,0.999983,-0.004788],
[-0.003447,0.999983,-0.004788],
[0.672747,0,-0.739873],
[-0.003962,0.999988,-0.002905],
[-0.003962,0.999988,-0.002905],
]

y_vectors = [
[-0.584273,0,-0.811557],
[-0.667201,0,-0.744877],
[-0.80646,0,-0.591289],
[-0.860742,0,-0.509042],
[0.001658,0.999986,-0.005029],
[-0.966182,0,-0.257861],
[0,-0.610995,-0.791634],
[-0.982882,0.103914,-0.152135],
[-0.995074,0.028717,-0.094887],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,0.999981,-0.006101],
[0,-0.957284,-0.28915],
[0,-0.826548,-0.562866],
[0.968234,0,-0.250047],
[0,-0.612802,-0.790237],
[0.952385,0,-0.304899],
[0.952385,0,-0.304899],
[0.864596,0,-0.502468],
[0.81155,0,-0.584284],
[0.81155,0,-0.584284],
[-0.348376,-0.882208,-0.316769],
[0.591273,0,-0.806471],
[0.591273,0,-0.806471],
]


def make_frames(p,x,y):
    frames = []
    for p,x,y in zip(points, x_vectors, y_vectors):
        p_cmps = Point(p[0], p[1], p[2])
        x_cmps = Vector(x[0], x[1], x[2])
        y_cmps = Vector(y[0], y[1], y[2])

        frames.append(Frame(p_cmps, x_cmps, y_cmps))
    
    return frames


def make_yaml(i, pose = False):
    filename = "dataset/pos{:02d}.yaml".format(i)
    s = cv.FileStorage(filename, cv.FileStorage_WRITE)

    pose_cart_1 = (pose[0], pose[1], pose[2], pose[3], pose[4], pose[5], pose[6], pose[7], pose[8], pose[9])
    F_base = Frame.from_quaternion(pose_cart_1[3:7])
    F_base.point = pose_cart_1[0:3]
    T = Transformation.from_frame(F_base)

    PoseState = np.array(T)

    s.write('PoseState', PoseState)

    pass


if __name__ == "__main__":
    make_yaml(1)